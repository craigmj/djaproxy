package ansible

import (
	"flag"
	"fmt"
	"os"
	"text/template"

	"github.com/craigmj/commander"
)

func AnsibleCommand() *commander.Command {
	fs := flag.NewFlagSet(`ansible-script`,flag.ExitOnError)
	dir := fs.String(`dir`, ``, `Django application directory`)
	name := fs.String(`name`,``,`App name for the service`)
	user := fs.String(`user`,``,`User to run as`)
	group := fs.String(`group`,``,`Group to run as`)
	app := fs.String(`app`,``,`Django application to start`)
	bind := fs.String(`bind`,`:21091`, `bind for the django service`)

	return commander.NewCommand(`ansible-script`,
		`Generate a templated ansible task list for installing djaproxy for a particular directory`,
		fs,
		func(args []string) error {
			if ``==*dir {
				return fmt.Errorf(`You need to supply the directory of the Django app as the -dir flag`)
			}
			if ``==*app {
				return fmt.Errorf(`You need to supply the app name for running django/daphne`)
			}
			self, err := os.Executable()
			if nil!=err {
				return err
			}
			return _ansible.Execute(os.Stdout, map[string]interface{}{
				`Dir`: *dir,
				`Self`: self,
				`Name`: *name,
				`User`: *user,
				`Group`: *group,
				`App`: *app,
				`Bind`: *bind,
			})
		})
}

var _ansible = template.Must(template.New(``).Parse(`# generated by djaproxy

- name: djaproxy-install
  become: yes
  synchronize:
    dest: "/usr/local/bin"
    src: "{{.Self}}"
  tags: ['djaproxy-bin']

- name: djaproxy-python-apts
  become: yes
  apt:
    name: libffi-dev    

- name: djaproxy-install-python
  become: yes
  command:
    chdir: "{{.Dir}}"
    cmd: "/usr/local/bin/djaproxy python install"

- name: djaproxy-upgrade-pip
  become: yes
  command:
    chdir: "{{.Dir}}"
    cmd: "/usr/local/bin/djaproxy python run -- -m pip install --upgrade pip"

- name: djaproxy-install-requirements
  become: yes
  command:
    chdir: "{{.Dir}}"
    cmd: "/usr/local/bin/djaproxy python run -- -m pip install -r requirements.txt"

- name: djaproxy-install-service
  become: yes
  command:
    chdir: "{{.Dir}}"
    cmd: "/usr/local/bin/djaproxy systemd-install -name {{.Name}} {{with .User}}-user {{.}}{{end}} {{with .Group}}-group {{.}}{{end}} -- web -bind {{.Bind}} -app {{.App}} -dir {{.Dir}}"
`))